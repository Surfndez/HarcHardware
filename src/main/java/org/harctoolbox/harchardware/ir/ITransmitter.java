/*
Copyright (C) 2012 Bengt Martensson.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see http://www.gnu.org/licenses/.
*/

package org.harctoolbox.harchardware.ir;

/**
 * Some general functions for generating transmitters in a general framework.
 * Semantics may vary depending on the implementation.
 */
public interface ITransmitter {

    /**
     * Returns a default transmitter for the present device.
     * @return Transmitter
     */
    public Transmitter getTransmitter();

    /**
     * Returns a transmitter corresponding to the argument.
     * @param connector numeral describing IR port. First should always be 1, not 0.
     * @return Transmitter
     */
    //public Transmitter newTransmitter(int connector);

    /**
     * Parses the String argument, and returns a transmitter accordingly. Syntax and semantics may vary.
     * @param connector String describing desired port. Syntax is dependent on the implementing class.
     * @return Transmitter
     * @throws NoSuchTransmitterException
     */
    public Transmitter getTransmitter(String connector) throws NoSuchTransmitterException;

    /**
     * Return possible name of transmitters, that are guaranteed to work with the getTransmitter(String).
     * This may be generated by inquiring the device, producing correct result,
     * or it may be some static function, describing transmitters not necessarily present on the actually deployed device.
     * @return Array of strings that are guaranteed to work with the getTransmitter(String)
     */
    public String[] getTransmitterNames();
}
